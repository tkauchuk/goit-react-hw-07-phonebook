{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/ContactList/ContactList.module.css","components/Section/Section.js","redux/service.js","components/ContactForm/ContactForm.js","redux/action-creators.js","components/Filter/Filter.js","components/Spinner/Spinner.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","styles","section","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","build","getContacts","query","providesTags","createContact","mutation","contact","url","method","body","invalidatesTags","deleteContact","id","useGetContactsQuery","useCreateContactMutation","useDeleteContactMutation","ContactForm","useState","name","setName","phone","setPhone","data","isSuccess","existingContacts","onInputChange","event","target","value","form","onSubmit","preventDefault","find","existingContact","toast","error","success","label","input","type","pattern","title","required","autoComplete","onChange","button","actions","changeContactsFilter","createAction","Filter","filter","useSelector","state","dispatch","useDispatch","enabled","length","disabled","e","Spinner","width","height","color","ContactListItem","isLoading","item","wrapper","number","onClick","warn","handleDeleteContact","ContactList","filtered","items","toLowerCase","includes","getFilteredContacts","list","map","App","Section","autoClose","createReducer","_","payload","store","configureStore","reducer","middleware","getDefaultMiddleware","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b5a385e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2-YvT\",\"label\":\"ContactForm_label__3o79v\",\"input\":\"ContactForm_input__3eOaE\",\"button\":\"ContactForm_button__3V-Gt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContactListItem_wrapper__asaVS\",\"item\":\"ContactListItem_item__3aydq\",\"button\":\"ContactListItem_button__CoEf0\",\"name\":\"ContactListItem_name__3gMtC\",\"number\":\"ContactListItem_number__14YZQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2bteX\",\"input\":\"Filter_input__3WUIR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__16Cb4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1Us9o\"};","import styles from './Section.module.css';\r\n\r\nfunction Container({ children }) {\r\n    return (\r\n        <div className={styles.section}>{children}</div>\r\n    );\r\n}\r\n\r\nexport default Container;","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport const contactsApi = createApi({\r\n  reducerPath: 'contactsApi',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://618fe12bf6bf450017484a87.mockapi.io/api/v1'\r\n  }),\r\n  tagTypes: ['Contacts'],\r\n  endpoints: (build) => ({\r\n    getContacts: build.query({\r\n      query: () => '/contacts',\r\n      providesTags: ['Contacts']\r\n    }),\r\n    createContact: build.mutation({\r\n      query: contact => ({\r\n        url: '/contacts',\r\n        method: 'POST',\r\n        body: contact\r\n      }),\r\n      invalidatesTags: ['Contacts']\r\n    }),\r\n    deleteContact: build.mutation({\r\n      query: id => ({\r\n        url: `/contacts/${id}`,\r\n        method: 'DELETE'\r\n      }),\r\n      invalidatesTags: ['Contacts']\r\n    })\r\n  })\r\n});\r\n\r\nexport const {\r\n  useGetContactsQuery,\r\n  useCreateContactMutation,\r\n  useDeleteContactMutation\r\n} = contactsApi;","import { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport styles from './ContactForm.module.css';\r\n\r\nimport {useCreateContactMutation, useGetContactsQuery} from \"../../redux/service\";\r\n\r\n\r\nfunction ContactForm() {\r\n    const [name, setName] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n\r\n    const { data, isSuccess  } = useGetContactsQuery();\r\n    const [createContact] = useCreateContactMutation();\r\n    const existingContacts = isSuccess && data;\r\n\r\n    const onInputChange = event => {\r\n        const { name, value } = event.target;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n\r\n            case 'phone':\r\n                setPhone(value);\r\n                break;\r\n\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n\r\n    const onInputReset = () => {\r\n        setName('');\r\n        setPhone('');\r\n    }\r\n\r\n    const HandleFormSubmit = event => {\r\n        event.preventDefault();\r\n        \r\n        const existingContact = existingContacts.find(existingContact => {\r\n            return existingContact.name === name;\r\n        });\r\n        if (existingContact) {\r\n            toast.error('Contact already exists. Try another name');\r\n            setName('');\r\n            return;\r\n        }\r\n        createContact({name, phone});\r\n        toast.success(`${name}'s contact is added to directory.`);\r\n        onInputReset();\r\n    }\r\n\r\n    return (\r\n\r\n      <form className={styles.form} onSubmit={HandleFormSubmit}>\r\n          <label className={styles.label}>\r\n              Name\r\n              <input\r\n                className={styles.input}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={name}\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n                autoComplete=\"off\"\r\n                onChange={onInputChange}\r\n              />\r\n          </label>\r\n          <label className={styles.label}>\r\n              Number\r\n              <input\r\n                className={styles.input}\r\n                type=\"tel\"\r\n                name=\"phone\"\r\n                value={phone}\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                required\r\n                autoComplete=\"off\"\r\n                onChange={onInputChange}\r\n              />\r\n          </label>\r\n          <button className={styles.button} type=\"submit\">Add a contact</button>\r\n      </form>\r\n    );\r\n}\r\n\r\nexport default ContactForm;","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst changeContactsFilter = createAction('contacts/filter');\r\n\r\nconst actions = { changeContactsFilter };\r\n\r\nexport default actions;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport styles from './Filter.module.css';\r\nimport actions from '../../redux/action-creators';\r\n\r\nimport {useGetContactsQuery} from \"../../redux/service\";\r\n\r\nfunction Filter() {\r\n    const filter = useSelector(state => state.filter);\r\n    const dispatch = useDispatch();\r\n\r\n    const { data, isSuccess } = useGetContactsQuery();\r\n    const enabled = isSuccess && data.length > 0;\r\n\r\n    return (\r\n      <label className={styles.label}>\r\n        Find contacts by name\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          autoComplete=\"off\"\r\n          disabled={!enabled}\r\n          onChange={e => dispatch(actions.changeContactsFilter(e.target.value))}\r\n        />\r\n      </label>\r\n);\r\n}\r\n\r\nexport default Filter;","import { Fragment } from \"react\";\r\nimport Loader from 'react-loader-spinner';\r\n\r\nfunction Spinner () {\r\n  return (\r\n    <Fragment>\r\n      <Loader\r\n        type=\"ThreeDots\"\r\n        width={40}\r\n        height={40}\r\n        color=\"#D4E09B\"\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Spinner;","import { toast } from \"react-toastify\";\r\nimport styles from \"./ContactListItem.module.css\";\r\n\r\nimport { useDeleteContactMutation } from \"../../redux/service\";\r\n\r\n\r\nfunction ContactListItem({id, name, phone}) {\r\n  const [deleteContact, {isLoading}] = useDeleteContactMutation();\r\n\r\n  const handleDeleteContact = id => {\r\n    deleteContact(id);\r\n    toast.warn(`${name}'s contact is deleted from directory.`);\r\n  }\r\n\r\n  return (\r\n    <li className={styles.item} key={id}>\r\n      <div className={styles.wrapper}>\r\n        <p className={styles.name}>{name}</p>\r\n        <span className={styles.number}>{phone}</span>\r\n        <button className={styles.button} disabled={isLoading}\r\n                onClick={() => handleDeleteContact(id)}>{isLoading ? \"Deleting\" : \"Delete\"}\r\n        </button>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ContactListItem;","import { Fragment } from \"react\";\r\nimport { useSelector } from 'react-redux';\r\nimport styles from './ContactList.module.css';\r\n\r\nimport { useGetContactsQuery } from \"../../redux/service\";\r\n\r\nimport Spinner from \"../Spinner\";\r\nimport ContactListItem from \"../ContactListItem\";\r\n\r\nfunction ContactList() {\r\n    const filter = useSelector(state => state.filter);\r\n    const { data, isSuccess, isLoading } = useGetContactsQuery();\r\n    const filtered = isSuccess && getFilteredContacts(data, filter);\r\n\r\n    return (\r\n      <Fragment>\r\n          {isLoading && <Spinner/>}\r\n          {isSuccess &&\r\n          <ul className={styles.list}>\r\n              {filtered.map(({ id, name, phone }) => {\r\n                  return (\r\n                    <ContactListItem\r\n                        key={id}\r\n                        id={id}\r\n                        name={name}\r\n                        phone={phone}\r\n                    />\r\n                  );\r\n              })}\r\n          </ul>}\r\n      </Fragment>\r\n    );\r\n}\r\n\r\nfunction getFilteredContacts(items, filter) {\r\n    return items.filter(item => {\r\n        return item.name.toLowerCase().includes(filter.toLowerCase());\r\n    })\r\n}\r\n\r\nexport default ContactList;","import { Fragment } from \"react\";\n\nimport Section from \"./components/Section\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from './components/Filter';\nimport ContactList from \"./components/ContactList\";\nimport { ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nfunction App() {\n\n    return (\n        <Fragment>\n            <Section>\n                <h1 className=\"\">Phonebook</h1>\n                <ContactForm />\n            </Section>\n            <Section>\n                <h2 className=\"\">Contacts</h2>\n                <Filter />\n                <ContactList />\n            </Section>\n          <ToastContainer autoClose={3000}/>\n        </Fragment>\n    );\n}\n\nexport default App;\n","import { createReducer, combineReducers, configureStore } from '@reduxjs/toolkit';\r\nimport actions from './action-creators';\r\nimport { contactsApi } from './service';\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeContactsFilter]: (_, {payload}) => payload\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    filter,\r\n    [contactsApi.reducerPath]: contactsApi.reducer,\r\n  },\r\n  middleware: getDefaultMiddleware => [...getDefaultMiddleware(), contactsApi.middleware],\r\n  devTools: process.env.NODE_ENV === 'development'\r\n});\r\n\r\nexport default store;\r\n\r\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n"],"sourceRoot":""}